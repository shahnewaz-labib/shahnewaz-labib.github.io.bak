<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Yet Another Blog</title>
    <link>https://shahnewaz-labib.github.io/</link>
    <description>Recent content on Yet Another Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Jul 2023 22:08:47 +0600</lastBuildDate><atom:link href="https://shahnewaz-labib.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managing Dotfiles</title>
      <link>https://shahnewaz-labib.github.io/posts/managing-dotfiles/</link>
      <pubDate>Thu, 06 Jul 2023 22:08:47 +0600</pubDate>
      
      <guid>https://shahnewaz-labib.github.io/posts/managing-dotfiles/</guid>
      <description>Why A linux system consists of so many config files that hold almost all of our cusomizations. So it&amp;rsquo;s necessary to manage them in an efficient manner.
How GNU Stow!
I&amp;rsquo;ve personally tried a few naive ways as well as git bare repo to manage them. But using GNU Stow seems much easier to me.
Setup Create a directory where you are going to store the dotfiles to manage (Assuming this folder is ~/dotfiles).</description>
    </item>
    
    <item>
      <title>Host Website From Own Machine</title>
      <link>https://shahnewaz-labib.github.io/posts/host-website-from-own-machine/</link>
      <pubDate>Wed, 28 Jun 2023 22:21:07 +0600</pubDate>
      
      <guid>https://shahnewaz-labib.github.io/posts/host-website-from-own-machine/</guid>
      <description>Introduction I&amp;rsquo;ve been using real ip for a while now and wanted to host a website from my ip address. It was easy and here&amp;rsquo;s how I did it.
Steps Setup nginx Install and enable nginx:
sudo pacman -S nginx sudo systemctl enable nginx sudo systemctl start --now nginx Get IP Address Run this to get the ip address of your device on your local network.
ip addr show INTERFACE_NAME | grep inet | awk &amp;#39;{ print $2; }&amp;#39; | sed &amp;#39;s/\/.</description>
    </item>
    
    
  </channel>
</rss>
